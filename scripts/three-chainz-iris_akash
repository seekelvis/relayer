#!/bin/bash
# three-chainz-iris_akash creates gaiad, iris and akash chains and configures the relayer to

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
CHAIN_DATA="$(pwd)/data"
RELAYER_DIR="$(dirname $SCRIPTDIR)"
RELAYER_CONF="$HOME/.relayer"

# Ensure gaiad is installed
if ! [ -x "$(which gaiad)" ]; then
  echo "Error: gaiad is not installed. Try running 'make build-gaia'" >&2
  exit 1
fi

# Ensure iris is installed
if ! [ -x "$(which iris)" ]; then
  echo "Error: iris is not installed. " >&2
  exit 1
fi

# Ensure akash is installed
if ! [ -x "$(which akash)" ]; then
  echo "Error: akash is not installed. Try running 'make build-akash'" >&2
  exit 1
fi

# Display software version for testers
echo "IRIS & GAIA $ AKASH VERSION INFO:"
gaiad version
iris version
akash version

# Ensure jq is installed
if [[ ! -x "$(which jq)" ]]; then
  echo "jq (a tool for parsing json in the command line) is required..."
  echo "https://stedolan.github.io/jq/download/"
  exit 1
fi

# Ensure user understands what will be deleted
if [[ -d $CHAIN_DATA ]] && [[ ! "$1" == "skip" ]]; then
  read -p "$(basename $0) will delete \$(pwd)/data and \$HOME/.relayer folders. Do you wish to continue? (y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
  fi
fi

# Delete data from old runs
rm -rf $CHAIN_DATA &> /dev/null
rm -rf $RELAYER_CONF &> /dev/null

# Stop existing gaiad, akash and iris processes
killall gaiad &> /dev/null
killall iris &> /dev/null
killall akash &> /dev/null

set -e

chainid0=atom
chainid1=iris
chainid2=akash

echo "Generating gaia, iris and akash configurations..."
mkdir -p $CHAIN_DATA && cd $CHAIN_DATA && cd ../
./scripts/one-chain gaiad $chainid0 ./data 26657 26656 6060 9090
./scripts/one-chain iris $chainid1 ./data 26557 26556 6061 9091
./scripts/one-chain akash $chainid2 ./data 25557 25556 6062 9092

[ -f $CHAIN_DATA/$chainid0.log ] && echo "$chainid0 initialized. Watch file $CHAIN_DATA/$chainid0.log to see its execution."
[ -f $CHAIN_DATA/$chainid1.log ] && echo "$chainid1 initialized. Watch file $CHAIN_DATA/$chainid1.log to see its execution."
[ -f $CHAIN_DATA/$chainid2.log ] && echo "$chainid2 initialized. Watch file $CHAIN_DATA/$chainid2.log to see its execution."

cd $RELAYER_DIR

echo "Building Relayer..."
make install

echo "Generating rly configurations..."
rly config init
rly config add-dir configs/demo3/

SEED0=$(jq -r '.mnemonic' $CHAIN_DATA/atom/key_seed.json)
SEED1=$(jq -r '.mnemonic' $CHAIN_DATA/iris/key_seed.json)
SEED2=$(jq -r '.mnemonic' $CHAIN_DATA/akash/key_seed.json)
echo "Key $(rly keys restore atom testkey "$SEED0") imported from atom to relayer..."
echo "Key $(rly keys restore iris testkey "$SEED1") imported from iris to relayer..."
echo "Key $(rly keys restore akash testkey "$SEED2") imported from akash to relayer..."
echo "Creating light clients..."
sleep 3
rly light init atom -f
rly light init iris -f
rly light init akash -f
